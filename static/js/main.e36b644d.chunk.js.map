{"version":3,"sources":["components/Navbar.js","components/TextFrom.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","TitleHref","Title","type","id","TextMode","onClick","TheMode","role","htmlFor","placeholder","TextFrom","useState","Text","setText","style","color","Heding","length","split","value","backgroundColor","onChange","event","target","rows","TextArea","NewText","toUpperCase","ShowAlert","Button1Title","toLowerCase","Button2Title","space","join","Button5Title","copy","document","getElementById","select","navigator","clipboard","writeText","Button6Title","Button4Title","Button3Title","Alert","alert","Type","word","lower","charAt","slice","cap","Message","defaultProps","App","Theme","setTheme","TextMod","setTextMod","message","setsAlert","sAlert","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e36b644d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href={props.TitleHref}>\r\n          {props.Title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"/navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/about\" className=\"nav-link\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch mx-3 text-${props.TextMode}`}>\r\n            <input\r\n              onClick={props.TheMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Dark\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\n// Todo: Title= \"Enter your Title Default is Title\"\r\n// Todo: TitleHerf= \"Enter your title herf link\"\r\n\r\nNavbar.propTypes = {\r\n  Title: PropTypes.string,\r\n  TitleHref: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  Title: \"Title\",\r\n  TitleHref: \"/\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TextFrom(props) {\r\n  const OneClick = () => {\r\n    // console.log('OneClick Activate' + Text)\r\n    let NewText = Text.toUpperCase();\r\n    setText(NewText);\r\n    props.ShowAlert(' Your Text converted to Upper Case successfully','success')\r\n  };\r\n\r\n  const TowClick = () => {\r\n    // console.log('OneClick Activate' + Text)\r\n    let NewText = Text.toLowerCase();\r\n    setText(NewText);\r\n    props.ShowAlert(' Your Text converted to Lower Case successfully','success')\r\n  };\r\n\r\n  const clear = () => {\r\n    // console.log('OneClick Activate' + Text)\r\n\r\n    setText(\"\");\r\n    props.ShowAlert(' YourText has been clear successfully','success')\r\n  };\r\n\r\n  const OneChange = (event) => {\r\n    // console.log('OneChange Activate')\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const Copy = () => {\r\n    let copy = document.getElementById(\"myText\");\r\n    copy.select();\r\n    navigator.clipboard.writeText(copy.value);\r\n    props.ShowAlert(' YourText has been copy successfully','success')\r\n  };\r\n\r\n  const Cut = () => {\r\n    let copy = document.getElementById(\"myText\");\r\n    copy.select();\r\n    navigator.clipboard.writeText(copy.value);\r\n    setText(\"\");\r\n    props.ShowAlert(' YourText has been cut successfully','success')\r\n  };\r\n\r\n  const Space = () => {\r\n    let space = Text.split(/[ ]+/);\r\n    setText(space.join(\" \"));\r\n    props.ShowAlert(' All Extra Space are Clear','success')\r\n  };\r\n\r\n  const [Text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>{props.Heding} </h1>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            | Characters {Text.length} |-| Words {Text.split(\" \").length} |\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={Text}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"white\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n            onChange={OneChange}\r\n            id=\"myText\"\r\n            rows={props.TextArea}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={OneClick}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button1Title}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={TowClick}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button2Title}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={Space}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button5Title}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={Cut}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button6Title}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={Copy}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button4Title}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={clear}\r\n          className=\"btn btn-primary my-2 mx-2\"\r\n        >\r\n          {props.Button3Title}\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1> Your Text Summary </h1>\r\n        <p>{0.008 * Text.split(\" \").length} Minutes To Red</p>\r\n        <h3>Preview</h3>\r\n        <p>{Text.length > 0 ? Text : \"Enter your text\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Title = 'Enter your Title'\r\n// Heding = 'Enter your Heding'\r\n// TextArea = 'Increase Text Area Y value'\r\n// Button1Title = 'Enter your Button Title'\r\n// Button2Title = 'Enter your Button Title'\r\n// Button3Title = 'Enter your Button Title'\r\n// Button4Title = 'Enter your Button Title'\r\n// Button5Title = 'Enter your Button Title'\r\n// Button5Title = 'Enter your Button Title'\r\n\r\nTextFrom.propTypes = {\r\n  Heding: PropTypes.string,\r\n  TextArea: PropTypes.string,\r\n  Button1Title: PropTypes.string,\r\n  Button2Title: PropTypes.string,\r\n  Button3Title: PropTypes.string,\r\n  Button4Title: PropTypes.string,\r\n  Button5Title: PropTypes.string,\r\n  Button6Title: PropTypes.string,\r\n};\r\n\r\nTextFrom.defaultProps = {\r\n  Heding: \"Heding\",\r\n  TextArea: \"5\",\r\n  Button1Title: \"Button1\",\r\n  Button2Title: \"Button2\",\r\n  Button3Title: \"Button3\",\r\n  Button4Title: \"Button4\",\r\n  Button5Title: \"Button5\",\r\n  Button6Title: \"Button5\",\r\n};\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const cap=(word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.Type} alert-dismissible fade show`}  role=\"alert\">\r\n            <strong>{cap(props.alert.Type)}</strong>{props.alert.Message}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextFrom from \"./components/TextFrom\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [Theme, setTheme] = useState(\"light\");\n\n  const [TextMod, setTextMod] = useState(\"dark\");\n\n  const ShowAlert = (message, type) => {\n    setsAlert({\n      Message: message,\n      Type: type,\n    });\n  };\n\n  const TheMode = () => {\n    if (Theme === \"light\" && TextMod === \"dark\") {\n      setTheme(\"dark\");\n      setTextMod(\"light\");\n      document.body.style.background = \"#1b1b1b\"; //\"#343b42\";\n      ShowAlert(\"Dark mode has been Enabled\", \"success \");\n    } else {\n      setTheme(\"light\");\n      setTextMod(\"dark\");\n      document.body.style.background = \"#e4eaf1\";\n      ShowAlert(\"Light mode has been Enabled\", \"success \");\n    }\n  };\n\n  const [sAlert, setsAlert] = useState(null);\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          Title=\"Real Drem\"\n          TitleHref=\"/\"\n          mode={Theme}\n          TextMode={TextMod}\n          TheMode={TheMode}\n        />\n\n        <Alert alert={sAlert} />\n\n        {/* <Switch>\n          <Route exact path=\"/about\">\n          <About mode={Theme} />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextFrom\n              ShowAlert={ShowAlert}\n              mode={Theme}\n              Heding=\"Enter the text to analyze below.\"\n              TextArea=\"10\"\n              Button1Title=\"Convert To UpperCase\"\n              Button2Title=\"Convert To LowerCase\"\n              Button3Title=\"Clear Text\"\n              Button4Title=\"Copy Text\"\n              Button5Title=\"Remove Extra Space\"\n              Button6Title=\"Cut Text\"\n            />\n          {/* </Route>\n        </Switch> */}\n\n        <div className=\"container my-3\">\n          \n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}